// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
   //engineType = "library" 
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String?
  email      String    @unique
  password   String
  profile    Profile?  @relation(fields: [profileId], references: [id])
  communities Community[]
}

model Profile {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  dob       DateTime
  place     String
  image     String
  phoneNumber String
  passion   String
}

model Community {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  users     User[]
  posts     Post[]
}

model Post {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  timestamp DateTime  @default(now())
  type      String    // You can replace this with an enum if you have predefined types
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  responses Response[]
}

model Response {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  content    String
  timestamp  DateTime  @default(now())
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  post       Post      @relation(fields: [postId], references: [id])
  postId     String
  comments   Comment[]
}

model Comment {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  content    String
  timestamp  DateTime  @default(now())
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  response   Response  @relation(fields: [responseId], references: [id])
  responseId String
}
